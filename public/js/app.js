// Generated by CoffeeScript 1.10.0

/* public/js/app.js */
var app;

app = angular.module('Scrumtious', []);

app.controller('BoardCtrl', [
  '$scope', function($scope) {
    $scope.stickyList = [];
    $scope.stickyList.push({
      text: 'some sticky text'
    });
    $scope.stickyTracker = 1;
    return $scope.addSticky = function() {
      return console.log('Sticky added!');
    };
  }
]);

app.directive('sticky', function($document) {
  return {
    restrict: 'E',
    scope: {
      idn: '@',
      text: '@',
      startX: '=x',
      startY: '=y',
      x: '=x',
      y: '=y'
    },
    template: '<div class=\'card blue-grey darken-1\'>\n  <div class=\'card-content white-text\'>\n    <p>{{text}}, {{x}}, {{y}}</p>\n  </div>\n</div>',
    link: function(scope, element, attrs) {
      var mousemove, mouseup;
      element.css({
        'position': 'relative',
        'display': 'block',
        'width': '150px',
        'height': '150px',
        'cursor': 'pointer'
      });
      element.on('mouseon', function(event) {
        return console.log(scope.text, scope.startX, scope.startY, scope.x, scope.y);
      });
      element.on('mousedown', function(event) {
        event.preventDefault();
        scope.startX = event.screenX - scope.x;
        scope.startY = event.screenY - scope.y;
        $document.on('mousemove', mousemove);
        return $document.on('mouseup', mouseup);
      });
      mousemove = function(event) {
        scope.y = event.screenY - scope.startY;
        scope.x = event.screenX - scope.startX;
        return element.css({
          top: scope.y + 'px',
          left: scope.x + 'px'
        });
      };
      mouseup = function(event) {
        $document.off('mousemove', mousemove);
        return $document.off('mouseup', mouseup);
      };
      return element.on('dblclick', function(event) {
        return alert(scope.x + ', ' + scope.startX);
      });
    }
  };
});
